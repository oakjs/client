<Oak.Page id="Dimmer" title="Dimmer">
  <PageTitle title="Dimmer">
    A dimmer hides distractions to focus attention on particular content.
    <Todo>
      <ul>
        <li>
          <i>
            active
          </i>
          vs
          <i>
            visible
          </i>
          , especially with loaders.
        </li>
        <li>
          <i>
            loading
          </i>
          property to automatically add a loader?
        </li>
      </ul>
    </Todo>
  </PageTitle>
  <PageSection title="Types">
    <Example title="Simple">
      <SUI.Segment>
        <LoremIpsum/>
        <SUI.Dimmer visible/>
      </SUI.Segment>
    </Example>
    <Example title="Inline Content" hint="<Dimmer>...text...</Dimmer>">
      <SUI.Segment>
        <LoremIpsum/>
        <SUI.Dimmer visible>
          Inline content here!
        </SUI.Dimmer>
      </SUI.Segment>
    </Example>
    <Example title="Content + Icon Attributes" hint="<Dimmer content='text' icon='icon'/>">
      <SUI.Segment>
        <LoremIpsum/>
        <SUI.Dimmer visible content="Content from attribute" icon="heart"/>
      </SUI.Segment>
    </Example>
    <Example title="Page Dimmer" hint="<Dimmer appearance='page'/>">
      <SUI.Dimmer ref="pageDimmer" appearance="page" content="I am the page dimmer!" closable/>
      <SUI.Button icon="plus" title="Show" onClick={()=>page.refs.pageDimmer.show()}/>
    </Example>
  </PageSection>
  <PageSection title="Appearance">
    <Example title="Inverted" hint="<Dimmer appearance='inverted'/>">
      <SUI.Segment>
        <LoremIpsum/>
        <SUI.Dimmer visible appearance="inverted" content="I am inverted!" icon="heart"/>
      </SUI.Segment>
    </Example>
    <Example title="Blurring" hint="<SomeContainer appearance='blurring'><Dimmer/>...container content...</SomeContainer>">
      <SUI.Segment>
        <SUI.Dimmer visible appearance="blurring"/>
        <LoremIpsum/>
      </SUI.Segment>
      <SUI.Segment>
        <SUI.Dimmer visible appearance="inverted blurring" icon="heart" content="I love it when a plan comes together"/>
        <LoremIpsum/>
      </SUI.Segment>
      <Warning>
        Blurring doesn&apos;t work unless the dimmer is the FIRST ELEMENT in its container.
      </Warning>
    </Example>
  </PageSection>
  <PageSection title="States">
    <Example title="Normal (hidden)" hint="<Dimmer/>">
      <SUI.Segment>
        <LoremIpsum/>
        <SUI.Dimmer ref="normalDimmer"/>
      </SUI.Segment>
    </Example>
    <Example title="Start visible" hint="<Dimmer visible/>">
      <SUI.Segment>
        <LoremIpsum/>
        <SUI.Dimmer ref="visibleDimmer" visible/>
      </SUI.Segment>
    </Example>
    <Example title="Disabled" hint="<Dimmer disabled/>">
      <Enablers ref="disabledEnabler" for="disabled" result="Initially disabled"/>
      <SUI.Segment>
        <LoremIpsum/>
        <SUI.Dimmer ref="disabled" disabled visible {...data.disabled}/>
      </SUI.Segment>
    </Example>
  </PageSection>
  <PageSection title="Events">
    <Example title="onClick" hint="<Dimmer onClick={...func...}/>">
      <Enablers for="click"/>
      <SUI.Segment>
        <LoremIpsum/>
        <SUI.Dimmer ref="click" visible id="click" onClick={page.deferredSet("click.result", "onClick() called")} {...data.click}/>
      </SUI.Segment>
    </Example>
    <Example title="onShow and onHide" hint="<Dimmer onShow={...func...} onHide={...func...}/>">
      <Enablers for="showHide"/>
      <SUI.Segment>
        <LoremIpsum/>
        <SUI.Dimmer ref="showHide" onClick={page.deferredSet("showHide.result", "onClick() called")} onShow={page.deferredSet("showHide.result", "onShow() called")} onHide={page.deferredSet("showHide.result", "onHide() called")} {...data.showHide}/>
      </SUI.Segment>
    </Example>
    <Example title="onShow and onHide starting visible" hint="<Dimmer visible onShow={...func...} onHide={...func...}/>">
      <Enablers for="hideShow"/>
      <SUI.Segment>
        <LoremIpsum/>
        <SUI.Dimmer ref="hideShow" visible {...data.hideShow} onClick={page.deferredSet("hideShow.result", "onClick() called")} onShow={page.deferredSet("hideShow.result", "onShow() called")} onHide={page.deferredSet("hideShow.result", "onHide() called")} {...data.hideShow}/>
      </SUI.Segment>
    </Example>
    <Example title="onChange" hint="<Dimmer visible onChange={...func...}/>">
      <Enablers for="onChange"/>
      <SUI.Segment>
        <LoremIpsum/>
        <SUI.Dimmer ref="onChange" visible {...data.onChange} onChange={page.deferredSet("onChange.result", "onChange() called")} {...data.onChange}/>
      </SUI.Segment>
    </Example>
    <Example title="Closable" hint="<Dimmer closable/>">
      <Enablers for="closable"/>
      <SUI.Segment>
        <LoremIpsum/>
        <SUI.Dimmer id="closable" ref="closable" closable visible content="Click to close me" onClick={page.deferredSet("closable.result", "onClick() called")} {...data.closable}/>
      </SUI.Segment>
    </Example>
  </PageSection>
</Oak.Page>